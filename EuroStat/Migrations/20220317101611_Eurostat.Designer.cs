// <auto-generated />
using System;
using EuroStat;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EuroStat.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220317101611_Eurostat")]
    partial class Eurostat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20");

            modelBuilder.Entity("EuroStat.ApiBaseURI", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("agencyID")
                        .HasColumnType("TEXT");

                    b.Property<string>("api_base_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("catalogue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("dbLoad")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ApiBaseURIes");

                    b.HasData(
                        new
                        {
                            ID = "Eurostat",
                            Description = "https://ec.europa.eu/eurostat/online-help/public/en/API_01_Introduction_en/#APIBASE_URI",
                            DisplayName = "Eurostat",
                            agencyID = "ESTAT",
                            api_base_uri = "https://ec.europa.eu/eurostat/api/dissemination",
                            catalogue = "https://ec.europa.eu/eurostat/api/dissemination/sdmx/2.1/sdmx-rest.wadl"
                        },
                        new
                        {
                            ID = "DG_COMP",
                            Description = "https://ec.europa.eu/eurostat/online-help/public/en/API_01_Introduction_en/#APIBASE_URI",
                            DisplayName = "DG COMP",
                            agencyID = "COMP",
                            api_base_uri = "https://webgate.ec.europa.eu/comp/redisstat/api/dissemination",
                            catalogue = "https://webgate.ec.europa.eu/comp/redisstat/api/dissemination/sdmx/2.1/sdmx-rest.wadl"
                        },
                        new
                        {
                            ID = "DG_EMPL",
                            Description = "https://ec.europa.eu/eurostat/online-help/public/en/API_01_Introduction_en/#APIBASE_URI",
                            DisplayName = "DG EMPL",
                            agencyID = "EMPL",
                            api_base_uri = "https://webgate.ec.europa.eu/empl/redisstat/api/dissemination",
                            catalogue = "https://webgate.ec.europa.eu/empl/redisstat/api/dissemination/sdmx/2.1/sdmx-rest.wadl"
                        },
                        new
                        {
                            ID = "DG_GROW",
                            Description = "https://ec.europa.eu/eurostat/online-help/public/en/API_01_Introduction_en/#APIBASE_URI",
                            DisplayName = "DG GROW",
                            agencyID = "GROW",
                            api_base_uri = "https://webgate.ec.europa.eu/grow/redisstat/api/dissemination",
                            catalogue = "https://webgate.ec.europa.eu/grow/redisstat/api/dissemination/sdmx/2.1/sdmx-rest.wadl"
                        });
                });

            modelBuilder.Entity("EuroStat.Categorisation", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiBaseID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceID")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetID")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetParentID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ApiBaseID");

                    b.ToTable("Categorisations");
                });

            modelBuilder.Entity("EuroStat.Category", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiBaseID")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategorySchemeID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ApiBaseID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EuroStat.CategoryScheme", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiBaseID")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("IconColor")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("IconGray")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("IconHover")
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ApiBaseID");

                    b.ToTable("CategorySchemes");
                });

            modelBuilder.Entity("EuroStat.Dataflow", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiBaseID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("HTML")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SDMX")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ApiBaseID");

                    b.ToTable("Dataflows");
                });

            modelBuilder.Entity("EuroStat.Categorisation", b =>
                {
                    b.HasOne("EuroStat.ApiBaseURI", "ApiBase")
                        .WithMany("CategorisationList")
                        .HasForeignKey("ApiBaseID");
                });

            modelBuilder.Entity("EuroStat.Category", b =>
                {
                    b.HasOne("EuroStat.ApiBaseURI", "ApiBase")
                        .WithMany("CategoryList")
                        .HasForeignKey("ApiBaseID");
                });

            modelBuilder.Entity("EuroStat.CategoryScheme", b =>
                {
                    b.HasOne("EuroStat.ApiBaseURI", "ApiBase")
                        .WithMany("CategorySchemeList")
                        .HasForeignKey("ApiBaseID");
                });

            modelBuilder.Entity("EuroStat.Dataflow", b =>
                {
                    b.HasOne("EuroStat.ApiBaseURI", "ApiBase")
                        .WithMany("DataflowList")
                        .HasForeignKey("ApiBaseID");
                });
#pragma warning restore 612, 618
        }
    }
}
